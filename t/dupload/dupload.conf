# vim: ft=perl

package config;

my $datadir = $ENV{DUPLOAD_DATA_DIR};
my $testdir = $ENV{DUPLOAD_TEST_DIR};

# Reset globals to have a known state.
$default_host = 'none';
$no_parentheses_to_fullname = undef;
$mta = undef;
%preupload = (
    changes => [],
    sourcepackage => [],
    file => [],
    deb => [],
    package => [],
    host => [],
);
%postupload = (
    changes => [],
    sourcepackage => [],
    file => [],
    deb => [],
    package => [],
    host => [],
);

%cfg = ();

$cfg{'bad-conf-obsolete-mailto'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    mailto => 'stable@example.org',
    mailtx => 'unstable@example.org',
    cc => 'cc@example.org',
};

$cfg{'bad-size-fields'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    dinstall_runs => 1,
};

$cfg{'bad-size-disk'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    dinstall_runs => 1,
};

$cfg{'bad-md5sums'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    dinstall_runs => 1,
};

$cfg{'bad-sha1sums'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    dinstall_runs => 1,
};

$cfg{'bad-sha256sums'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    dinstall_runs => 1,
};

$cfg{'hook-exec'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    dinstall_runs => 1,
    preupload => {
        changes => [ "$datadir/hooks/per-host %1" ],
        sourcepackage => [ "$datadir/hooks/per-host %1 %2" ],
        package => [ "$datadir/hooks/per-host %1 %2" ],
        file => [ "$datadir/hooks/per-host %1" ],
        deb => [ "$datadir/hooks/per-host %1" ],
        host => [ "$datadir/hooks/per-host %1" ],
    },
    postupload => {
        changes => [ "$datadir/hooks/per-host %1" ],
        sourcepackage => [ "$datadir/hooks/per-host %1 %2" ],
        package => [ "$datadir/hooks/per-host %1 %2" ],
        file => [ "$datadir/hooks/per-host %1" ],
        deb => [ "$datadir/hooks/per-host %1" ],
        host => [ "$datadir/hooks/per-host %1" ],
    },
};

$cfg{'mail-announce'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    mail => [ {
        match => qr/^stable/,
        to => 'stable@example.org',
        cc => 'cc@example.org',
    }, {
        match => qr/^(?:unstable|experimental)/,
        to => 'unstable@example.org',
        cc => 'cc@example.org',
    } ],
};

$cfg{'mail-announce-no-archive'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    archive => 0,
    mail => [ {
        match => qr/^stable/,
        to => 'test@example.org',
    } ],
};

$cfg{'mail-announce-extra'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    mail => [ {
        match => qr/^stable/,
        to => 'test@example.org',
    } ],
};

$cfg{'mail-no-announce-no-extra'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
};

$cfg{'mail-announce-visible'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    visibleuser => 'dpkg-devel',
    visiblename => 'lists.debian.org',
    fullname => 'Dpkg Developers',
    mail => [ {
        match => qr/^stable/,
        to => 'test@example.org',
    } ],
};

$cfg{'method-copy-direct'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    dinstall_runs => 1,
};

$cfg{'method-copy-queue'} = {
    method => 'copy',
    incoming => "$testdir/incoming",
    queuedir => "$testdir/queue",
    dinstall_runs => 1,
};

$cfg{'method-scp-direct'} = {
    fqdn => 'example.org',
    method => 'scp',
    incoming => "$testdir/incoming",
    dinstall_runs => 1,
};

$cfg{'method-scp-queue'} = {
    fqdn => 'example.org',
    method => 'scp',
    incoming => "$testdir/incoming",
    queuedir => "$testdir/queue",
    dinstall_runs => 1,
};

$cfg{'method-scpb-direct'} = {
    fqdn => 'example.org',
    method => 'scpb',
    incoming => "$testdir/incoming",
    dinstall_runs => 1,
};

$cfg{'method-scpb-queue'} = {
    fqdn => 'example.org',
    method => 'scpb',
    incoming => "$testdir/incoming",
    queuedir => "$testdir/queue",
    dinstall_runs => 1,
};

$cfg{'method-rsync-direct'} = {
    fqdn => 'example.org',
    method => 'rsync',
    incoming => "$testdir/incoming",
    dinstall_runs => 1,
};

$cfg{'method-rsync-queue'} = {
    fqdn => 'example.org',
    method => 'rsync',
    incoming => "$testdir/incoming",
    queuedir => "$testdir/queue",
    dinstall_runs => 1,
};

1;
