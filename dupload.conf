# This is the configuration for dupload.
# It is intended to be read and evaled from perl.
# ex:set ts=4 sw=4:

package config;

### Defaults, add entries for each host
#
### PLEASE READ THE MANPAGES dupload(1) and dupload.conf(5)
### PLEASE READ THE MANPAGES dupload(1) and dupload.conf(5)
### PLEASE READ THE MANPAGES dupload(1) and dupload.conf(5)
#
# Global variables:
# $default_host  - the host to use if no --to option is used
# $no_parentheses_to_fullname - boolean, as its name says
#
# Per-host variables:
# fqdn 	- full hostname
# login	- account (defaults to 'anonymous')
#         use: "user\@remote" for firewall logins
# method    - currently scpb, scp or ftp (defaults to ftp)
# incoming 	- directory where to upload first
# queuedir	- directory where to move if upload succeeded
# mailto	- address for announcment (stable)   | according to
# mailtx	- address for announcment (unstable) | the policy 
# cc		- address for carbon copy of announcment
# fullname      - the full name to use in the announcement
# visibleuser   - the username to use in the announcement
# visiblename   - the domainname to use in the announcement
# dinstall_runs - the host you upload to has a dinstall program (or equivalent)
#                 which sends announcements itself, so dupload will not do it,
#                 if it encounters the new corresponding changelog format.         
# Example of a default host:
#$default_host = "master";

$cfg{master} = {
	fqdn => "master.debian.org",
	login => getlogin() || $ENV{USER} || $ENV{LOGNAME},
	incoming => "/home/Debian/ftp/private/project/Incoming/",
	mailto => "debian-changes\@lists.debian.org", # stable
	mailtx => "debian-devel-changes\@lists.debian.org",	# unstable, exper.
	visibleuser => getlogin() || $ENV{USER} || $ENV{LOGNAME},
	visiblename => "",
	fullname => "",
        # The dinstall on master now sends announcement itself. May 1999.
	dinstall_runs => 1,
        method => "scpb"
};

$cfg{chiark} = {
	fqdn => "ftp.chiark.greenend.org.uk",
	incoming => "/pub/debian/private/project/Incoming/",
	queuedir => "../queue/",
	mailto => "debian-changes\@lists.debian.org", # stable
	mailtx => "debian-devel-changes\@lists.debian.org", # unstable, exper.
	visibleuser => getlogin() || $ENV{USER} || $ENV{LOGNAME},
	visiblename => "",
	fullname => "",
	# Uploads to this host will go to master, so:
	dinstall_runs => 1,
};

$cfg{erlangen} = {
        fqdn => "ftp.uni-erlangen.de",
        incoming => "/public/pub/Linux/debian/UploadQueue/",
        mailto => "debian-changes\@lists.debian.org", # stable
        mailtx => "debian-devel-changes\@lists.debian.org",  # unstable, experimental
        visibleuser => getlogin() || $ENV{USER} || $ENV{LOGNAME},
        visiblename => "",
        fullname => "",
	# Uploads to this host will go to master, so:
	dinstall_runs => 1,
};

$cfg{giano} = {
        fqdn => "ftp3.linux.it",
        incoming => "/pub/Linux/UploadQueue/",
        mailto => "debian-changes\@lists.debian.org", # stable
        mailtx => "debian-devel-changes\@lists.debian.org",  # unstable, experimental
        visibleuser => getlogin() || $ENV{USER} || $ENV{LOGNAME},
        visiblename => "",
        fullname => "",
	# Uploads to this host will go to master, so:
	dinstall_runs => 1,
};

$cfg{uk} = {
        fqdn => "ftp.uk.debian.org",
        incoming => "debian/UploadQueue/",
        mailto => "debian-changes\@lists.debian.org",#stable
        mailtx => "debian-devel-changes\@lists.debian.org", # unstable, exper.
        visibleuser => getlogin() || $ENV{USER} || $ENV{LOGNAME},
        visiblename => "",
        fullname => "",
	# Uploads to this host will go to master, so:
	dinstall_runs => 1,
};

# Warning: it refuses anonymous logins if the password
# "seems incorrect". Since dupload does not always forge a correct password,
# you'll probably have to define one in your ~/.dupload.conf:
#   $cfg{jp}{password} = "YOURNAME\@debian.org";
$cfg{jp} = {
    fqdn => "master.debian.or.jp",
    incoming => "/pub/Incoming/upload/",
    mailto => "debian-changes\@lists.debian.org", # stable
    mailtx => "debian-devel-changes\@lists.debian.org", # unstable, exper.
    visibleuser => getlogin() || $ENV{USER} || $ENV{LOGNAME},
    visiblename => "",
    fullname => "",
    # Uploads to this host will go to master, so:
    dinstall_runs => 1,
};

$cfg{samosa} = {
    fqdn => "samosa.debian.org",
    incoming => "/pub/UploadQueue/",
    mailto => "debian-changes\@lists.debian.org", # stable
    mailtx => "debian-devel-changes\@lists.debian.org", # unstable, exper.
    visibleuser => getlogin() || $ENV{USER} || $ENV{LOGNAME},
    visiblename => "",
    fullname => "",
    # Uploads to this host will go to master, so:
    dinstall_runs => 1,
};

# pandora
$cfg{'non-us'} = {
    fqdn => "non-us.debian.org",
    incoming => "/org/non-us.debian.org/incoming",
    mailto => "debian-changes\@lists.debian.org", # stable
    mailtx => "debian-devel-changes\@lists.debian.org", # unstable, exper.
    visibleuser => getlogin() || $ENV{USER} || $ENV{LOGNAME},
    visiblename => "",
    fullname => "",
    dinstall_runs => 1,
    method => "scpb",
};


# Don't remove the following line.  Perl needs it.
1;

## Local Variables: ##
## mode:perl ##
## End: ##

